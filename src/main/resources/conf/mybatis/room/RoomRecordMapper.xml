<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lu.office.service.dao.room.RoomRecordMapper" >
  <resultMap id="BaseResultMap" type="com.lu.office.model.room.RoomRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="rentor_id" property="rentorId" jdbcType="INTEGER" />
    <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
    <result column="opertate_type" property="opertateType" jdbcType="INTEGER" />
    <result column="room_id" property="roomId" jdbcType="INTEGER" />
    <result column="room_name" property="roomName" jdbcType="VARCHAR" />
    <association property="rentor" column="rentor_id" javaType="com.lu.office.model.sys.User"
                 select="com.lu.office.service.dao.sys.UserMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, operator, rentor_id, operate_time, opertate_type, room_id, room_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from room_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from room_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lu.office.model.room.RoomRecord" >
    insert into room_record (id, operator, rentor_id, 
      operate_time, opertate_type, room_id, 
      room_name)
    values (#{id,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, #{rentorId,jdbcType=INTEGER}, 
      #{operateTime,jdbcType=TIMESTAMP}, #{opertateType,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, 
      #{roomName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lu.office.model.room.RoomRecord" >
    insert into room_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="rentorId != null" >
        rentor_id,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
      <if test="opertateType != null" >
        opertate_type,
      </if>
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="roomName != null" >
        room_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="rentorId != null" >
        #{rentorId,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="opertateType != null" >
        #{opertateType,jdbcType=INTEGER},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="roomName != null" >
        #{roomName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lu.office.model.room.RoomRecord" >
    update room_record
    <set >
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="rentorId != null" >
        rentor_id = #{rentorId,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="opertateType != null" >
        opertate_type = #{opertateType,jdbcType=INTEGER},
      </if>
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="roomName != null" >
        room_name = #{roomName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lu.office.model.room.RoomRecord" >
    update room_record
    set operator = #{operator,jdbcType=VARCHAR},
      rentor_id = #{rentorId,jdbcType=INTEGER},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      opertate_type = #{opertateType,jdbcType=INTEGER},
      room_id = #{roomId,jdbcType=INTEGER},
      room_name = #{roomName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getCountBycont" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select
    count(*)
    from room_record
    where 1=1 ${cont}
  </select>
  <select id="getPageListByCont" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from room_record
    where 1 = 1 ${cont}
    ORDER By operate_time DESC
    limit #{offSet},#{pageSize}
  </select>

  <select id="getCountWithName" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select
    count(*)
    from room_record r LEFT JOIN users u on( rentor_id = user_id)
    where 1=1 ${cont}
  </select>
  <select id="getPageListWithName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    id, operator, rentor_id, operate_time, opertate_type, room_id, room_name
    from room_record r LEFT JOIN users u on( rentor_id = user_id)
    where 1=1 ${cont}
    ORDER By operate_time DESC
    limit #{offSet},#{pageSize}
  </select>
</mapper>