<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lu.office.service.dao.sys.UserMapper" >
  <resultMap id="BaseResultMap" type="com.lu.office.model.sys.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="emall" property="emall" jdbcType="VARCHAR" />
    <result column="activity" property="activity" jdbcType="INTEGER" />
    <association property="userRolesKey" column="user_id" javaType="com.lu.office.model.sys.UserRolesKey"
                 select="com.lu.office.service.dao.sys.UserRolesMapper.getRoleByUserId"/>
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, password, sex, phone, emall, activity
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lu.office.model.sys.User" >
    insert into users (user_id, user_name, password, 
      sex, phone, emall, 
      activity)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{emall,jdbcType=VARCHAR}, 
      #{activity,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lu.office.model.sys.User" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="emall != null" >
        emall,
      </if>
      <if test="activity != null" >
        activity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="emall != null" >
        #{emall,jdbcType=VARCHAR},
      </if>
      <if test="activity != null" >
        #{activity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lu.office.model.sys.User" >
    update users
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="emall != null" >
        emall = #{emall,jdbcType=VARCHAR},
      </if>
      <if test="activity != null" >
        activity = #{activity,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lu.office.model.sys.User" >
    update users
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      emall = #{emall,jdbcType=VARCHAR},
      activity = #{activity,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="getOneByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from users
    where user_name = #{userName} and activity = 1
    limit 1
  </select>

  <select id="getCountByCont" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select
    count(*)
    from users
    where 1=1 ${cont}
  </select>

  <select id="getUserPageListByCont" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from users
    where 1=1 ${cont}
    limit #{offSet},#{pageSize}
  </select>

  <select id="getOneByUserNameOutId" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from users
    where user_name = #{userName} and activity = 1 and user_id != #{userId}
    limit 1
  </select>

  <select id="getMaxUserId" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select
    max(user_id)
    from users
  </select>
</mapper>