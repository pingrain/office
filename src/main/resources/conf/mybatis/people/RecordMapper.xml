<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lu.office.service.dao.people.RecordMapper">
  <resultMap id="BaseResultMap" type="com.lu.office.model.people.Record">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="staff_id" jdbcType="INTEGER" property="staffId" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="sign_time" jdbcType="TIMESTAMP" property="signTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="activity" jdbcType="INTEGER" property="activity" />
    <association column="staff_id" javaType="com.lu.office.model.people.Staff" property="staff" select="com.lu.office.service.dao.people.StaffMapper.getOneByStaffId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, staff_id, creat_time, sign_time, status, activity
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lu.office.model.people.Record">
    insert into record (id, staff_id, creat_time, 
      sign_time, status, activity
      )
    values (#{id,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{creatTime,jdbcType=TIMESTAMP}, 
      #{signTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{activity,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lu.office.model.people.Record">
    insert into record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="signTime != null">
        sign_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="activity != null">
        activity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signTime != null">
        #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="activity != null">
        #{activity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lu.office.model.people.Record">
    update record
    <set>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signTime != null">
        sign_time = #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="activity != null">
        activity = #{activity,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lu.office.model.people.Record">
    update record
    set staff_id = #{staffId,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      sign_time = #{signTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      activity = #{activity,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getCountByCont" parameterType="java.lang.String" resultType="java.lang.Integer">
    select
    count(*)
    from record
    where 1 = 1 ${cont}
    ORDER  BY creat_time DESC ,sign_time DESC
  </select>

  <select id="getListByCont" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from record
    where 1 = 1 ${cont}
    ORDER  BY creat_time DESC ,sign_time DESC
    limit #{offSet},#{pageSize}
  </select>

  <select id="getCountByContWithName" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    count(*)
    from record r LEFT JOIN staff s ON (r.staff_id = s.staff_id)
    where 1 = 1 ${cont}
    ORDER  BY creat_time DESC ,sign_time DESC
  </select>

  <select id="getListByContWithName" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    r.id as id, r.staff_id as staff_id, creat_time, sign_time, status, r.activity as activity
    from record r LEFT JOIN staff s ON (r.staff_id = s.staff_id)
    where 1 = 1 ${cont}
    ORDER  BY creat_time DESC ,sign_time DESC
    limit #{offSet},#{pageSize}
  </select>
</mapper>