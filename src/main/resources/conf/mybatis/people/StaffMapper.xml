<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lu.office.service.dao.people.StaffMapper">
  <resultMap id="BaseResultMap" type="com.lu.office.model.people.Staff">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="staff_id" jdbcType="INTEGER" property="staffId" />
    <result column="staff_name" jdbcType="VARCHAR" property="staffName" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="identity_id" jdbcType="VARCHAR" property="identityId" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="current_adress" jdbcType="VARCHAR" property="currentAdress" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="political_background" jdbcType="VARCHAR" property="politicalBackground" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="activity" jdbcType="INTEGER" property="activity" />
    <association column="department_id" javaType="com.lu.office.model.people.Department" property="department" select="com.lu.office.service.dao.people.DepartmentMapper.selectByPrimaryKey" />
  </resultMap>
  <sql id="Base_Column_List">
    id, staff_id, staff_name, sex, identity_id, birthday, phone, email, nation, current_adress, 
    department_id, native_place, political_background, start_time, image_url, activity
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from staff
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from staff
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lu.office.model.people.Staff">
    insert into staff (id, staff_id, staff_name, 
      sex, identity_id, birthday, 
      phone, email, nation, 
      current_adress, department_id, native_place, 
      political_background, start_time, image_url, 
      activity)
    values (#{id,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{staffName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{identityId,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, 
      #{currentAdress,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, #{nativePlace,jdbcType=VARCHAR}, 
      #{politicalBackground,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{imageUrl,jdbcType=VARCHAR}, 
      #{activity,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lu.office.model.people.Staff">
    insert into staff
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="staffName != null">
        staff_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="identityId != null">
        identity_id,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="currentAdress != null">
        current_adress,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="nativePlace != null">
        native_place,
      </if>
      <if test="politicalBackground != null">
        political_background,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="activity != null">
        activity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="staffName != null">
        #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="identityId != null">
        #{identityId,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="currentAdress != null">
        #{currentAdress,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null">
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="politicalBackground != null">
        #{politicalBackground,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="activity != null">
        #{activity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lu.office.model.people.Staff">
    update staff
    <set>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="staffName != null">
        staff_name = #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="identityId != null">
        identity_id = #{identityId,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="currentAdress != null">
        current_adress = #{currentAdress,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null">
        native_place = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="politicalBackground != null">
        political_background = #{politicalBackground,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="activity != null">
        activity = #{activity,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lu.office.model.people.Staff">
    update staff
    set staff_id = #{staffId,jdbcType=INTEGER},
      staff_name = #{staffName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      identity_id = #{identityId,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      current_adress = #{currentAdress,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      political_background = #{politicalBackground,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      activity = #{activity,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getCountByCont" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select
    count(*)
    from staff
    where 1=1 ${cont}
  </select>

  <select id="getListByCont" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from staff
    where 1=1 ${cont}
    limit #{offSet},#{pageSize}
  </select>

  <select id="getOneByStaffId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from staff
    where staff_id = #{staffId} and activity = 1
    limit 1
  </select>

  <select id="getOneByCont" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from staff
    where 1 = 1 ${cont}
    limit 1
  </select>

</mapper>